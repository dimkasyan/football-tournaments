/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:inherit}html{font-family:Montserrat,sans-serif;box-sizing:border-box}body{padding:3.5em;margin:0 auto;max-width:1152px;display:grid;-webkit-box-pack:center;justify-content:center}img{max-width:100%}a{text-decoration:none}header{position:relative}header img{border-radius:2em}header .football-current-score{display:grid;grid-template-columns:repeat(3,1fr);position:absolute;background:#fff;border-radius:20px 20px 0 0;width:51.6em;height:6.3em;bottom:0;left:6.75em}@media (max-width:1140px){header .football-current-score{width:40em;left:9.75em}}@media (max-width:1024px){header .football-current-score{width:35em;left:9.75em}}@media (max-width:950px){header .football-current-score{width:30em;left:7.75em}}@media (max-width:900px){header .football-current-score{left:8.75em}}header .football-current-score .left-opponent,header .football-current-score .rigth-opponent{display:grid;grid-template-columns:repeat(2,1fr);-webkit-box-align:center;align-items:center}header .football-current-score .left-opponent-img,header .football-current-score .rigth-opponent-img{width:4em;height:4em;justify-self:center}@media (max-width:1024px){header .football-current-score .left-opponent-img,header .football-current-score .rigth-opponent-img{width:3em;height:3em}}header .football-current-score .left-opponent-name,header .football-current-score .rigth-opponent-name{font-weight:700}@media (max-width:1024px){header .football-current-score .left-opponent-name,header .football-current-score .rigth-opponent-name{font-size:16px}}header .football-current-score .score{display:grid;grid-template-columns:repeat(3,1fr);-webkit-box-align:center;align-items:center;font-weight:700;font-size:36px;justify-items:center}@media (max-width:1024px){header .football-current-score .score{font-size:24px}}.table-form{position:relative}.table-row{display:grid;grid-auto-flow:column;grid-template-columns:1fr repeat(8,5.8em);transition:top .5s;-webkit-transition:top .5s}.table-row.header{color:#b5b5c1;font-weight:700;font-size:14px;line-height:22px;padding:1.75em 0 1em 0}.table-row__title{align-self:center;padding-left:5em}.table-row__title-club{align-self:center;justify-self:start}.table-row__data{justify-self:center;align-self:center}.table-row__img{background-size:contain}.table-row__img-block{display:grid;grid-template-columns:1fr .5fr;position:relative}.table-row__img-cup{display:none;position:absolute;align-self:end;justify-self:center;padding-left:.25em}.table-row__img-cup.winner{display:block}.table-row.card{grid-template-columns:5em .2fr 1fr repeat(8,5.8em);grid-template-rows:4em;-webkit-box-align:center;align-items:center;font-weight:700;font-size:14px;line-height:22px}.table-row.card.sort{position:absolute;width:100%}.table-row.card:nth-child(odd){background:#f4f5f7;border-radius:10px}.table-contents{display:grid;grid-template-columns:repeat(2,1fr);-webkit-box-align:center;align-items:center;padding:2em 0 1em 0;border-bottom:1px solid #f4f5f6}.table-contents-block,.table-contents-filter{display:grid;-webkit-box-align:center;align-items:center}.table-contents-block{grid-template-columns:.6fr 1fr}.table-contents-filter{grid-template-columns:.8fr .5fr;grid-template-rows:40px;justify-items:end;font-weight:700;font-size:14px;line-height:22px;color:#000}.table-contents-count-game,.table-contents-count-score{line-height:5.25em;border-bottom:2px solid transparent}.table-contents-count-game:hover,.table-contents-count-score:hover{cursor:pointer}.table-contents-count-game.active,.table-contents-count-score.active{color:#b5b5c1;border-bottom:2px solid #74a133}.table-contents-name{font-weight:700;font-size:18px;line-height:26px}.table-contents-status{font-size:12px;font-weight:700;line-height:22px;justify-self:start;color:#fff;background:#74a233;border-radius:5px;padding:4px 14px}.table-contents-status.completed{color:#000;background:#f4f5f6}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
